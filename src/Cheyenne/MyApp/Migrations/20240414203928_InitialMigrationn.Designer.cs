// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApp.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240414203928_InitialMigrationn")]
    partial class InitialMigrationn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyApp.Models.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Classificacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GrupoMuscular")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mecanica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("MyApp.Models.ItemTreino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExercicioId")
                        .HasColumnType("integer");

                    b.Property<int>("Repeticoes")
                        .HasColumnType("integer");

                    b.Property<int>("Series")
                        .HasColumnType("integer");

                    b.Property<int>("TreinoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("TreinoId");

                    b.ToTable("ItensTreino");
                });

            modelBuilder.Entity("MyApp.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Altura")
                        .HasColumnType("double precision");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("MyApp.Models.Recomendacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRecomendacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.ToTable("Recomendacoes");
                });

            modelBuilder.Entity("MyApp.Models.RecomendacaoItemTreino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemTreinoId")
                        .HasColumnType("integer");

                    b.Property<int>("RecomendacaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemTreinoId");

                    b.HasIndex("RecomendacaoId");

                    b.ToTable("RecomendacaoItensTreino");
                });

            modelBuilder.Entity("MyApp.Models.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("MyApp.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MyApp.Models.ItemTreino", b =>
                {
                    b.HasOne("MyApp.Models.Exercicio", "Exercicio")
                        .WithMany("ItensTreino")
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApp.Models.Treino", "Treino")
                        .WithMany("ItensTreino")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercicio");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("MyApp.Models.Perfil", b =>
                {
                    b.HasOne("MyApp.Models.Usuario", "Usuario")
                        .WithOne("Perfil")
                        .HasForeignKey("MyApp.Models.Perfil", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MyApp.Models.Recomendacao", b =>
                {
                    b.HasOne("MyApp.Models.Perfil", "Perfil")
                        .WithMany("Recomendacoes")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MyApp.Models.RecomendacaoItemTreino", b =>
                {
                    b.HasOne("MyApp.Models.ItemTreino", "ItemTreino")
                        .WithMany("RecomendacaoItensTreino")
                        .HasForeignKey("ItemTreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApp.Models.Recomendacao", "Recomendacao")
                        .WithMany("RecomendacaoItensTreino")
                        .HasForeignKey("RecomendacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemTreino");

                    b.Navigation("Recomendacao");
                });

            modelBuilder.Entity("MyApp.Models.Treino", b =>
                {
                    b.HasOne("MyApp.Models.Perfil", "Perfil")
                        .WithMany("Treinos")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("MyApp.Models.Exercicio", b =>
                {
                    b.Navigation("ItensTreino");
                });

            modelBuilder.Entity("MyApp.Models.ItemTreino", b =>
                {
                    b.Navigation("RecomendacaoItensTreino");
                });

            modelBuilder.Entity("MyApp.Models.Perfil", b =>
                {
                    b.Navigation("Recomendacoes");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("MyApp.Models.Recomendacao", b =>
                {
                    b.Navigation("RecomendacaoItensTreino");
                });

            modelBuilder.Entity("MyApp.Models.Treino", b =>
                {
                    b.Navigation("ItensTreino");
                });

            modelBuilder.Entity("MyApp.Models.Usuario", b =>
                {
                    b.Navigation("Perfil")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
